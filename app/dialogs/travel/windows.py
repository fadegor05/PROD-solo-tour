from typing import Dict

from aiogram_dialog import Window, Data, DialogManager
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import Cancel, Button, Back
from aiogram_dialog.widgets.text import Const, Format

from app.dialogs.travel import states, selected, keyboards, getters
from app.misc.constants import SwitchToWindow


def travels_window():
    return Window(
        Const('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ üß≥'),
        keyboards.paginated_travels(selected.on_chosen_travel),
        Button(Const('‚úàÔ∏è –°–æ–∑–¥–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ'), 'create_travel', selected.on_create_travel),
        Cancel(Const('‚ùå –í—ã—Ö–æ–¥')),
        state=states.TravelMenu.select_travel,
        getter=getters.get_travels,
    )


def travel_info_window():
    return Window(
        Format(
            '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ {travel_name} ‚úàÔ∏è\nüè∑Ô∏è {owner_name}\nüë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {members_amount}\n\n{travel_description}'),
        Button(Const('üóíÔ∏è –ó–∞–º–µ—Ç–∫–∏'), 'travel_notes_button', selected.on_travel_notes),
        Button(Const('üìç –õ–æ–∫–∞—Ü–∏–∏'), 'travel_locations_button', selected.on_travel_locations),
        Button(Const('üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏'), 'travel_members_button', selected.on_travel_members),
        Button(Const('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å'), 'travel_delete_button', selected.on_travel_delete),
        Back(Const('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')),
        state=states.TravelMenu.select_action,
        getter=getters.get_travel
    )


def travel_delete_confirm_window():
    return Window(
        Format('–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ? üóëÔ∏è'),
        Button(Const('‚úÖ –î–∞'), 'travel_delete_confirm_button', selected.on_travel_delete_confirm),
        Cancel(Const('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')),
        state=states.DeleteTravel.delete_travel
    )


def travel_name_window():
    return Window(
        Const('–ù–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è ‚úàÔ∏è'),
        TextInput(
            id='travel_enter_name',
            on_success=selected.on_entered_name
        ),
        state=states.CreateTravel.name
    )


def travel_description_window():
    return Window(
        Const('–ù–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üìö'),
        TextInput(
            id='travel_enter_description',
            on_success=selected.on_entered_description
        ),
        state=states.CreateTravel.description
    )


async def on_process_result(data: Data, result: Dict, manager: DialogManager):
    if result:
        switch_to_window = result.get('switch_to_window')
        if switch_to_window == SwitchToWindow.SelectTravel:
            await manager.switch_to(states.TravelMenu.select_travel)
