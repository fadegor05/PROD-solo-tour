from typing import Dict

from aiogram_dialog import Data, DialogManager, Window
from aiogram_dialog.widgets.kbd import Cancel, Button, Back
from aiogram_dialog.widgets.text import Const, Format

from app.dialogs.invitation import states, keyboards, selected, getters
from app.misc.constants import SwitchToWindow


def invitations_window():
    return Window(
        Format('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ üì®\n\nüîë –í–∞—à –∫–æ–¥ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–≥–∏–º–∏:\n{code}'),
        keyboards.paginated_invitations(selected.on_chosen_invitation),
        Cancel(Const('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')),
        state=states.InvitationMenu.select_invitation,
        getter=getters.get_invitations
    )


def invitation_info_window():
    return Window(
        Format('–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ {name} ‚úâÔ∏è\n{description}\n\nüë• –£—á–∞—Å—Ç–Ω–∏–∫–∏: {members} ({members_amount})\nüè∑Ô∏è {owner_name}'),
        Button(Const('‚úÖ –ü—Ä–∏–Ω—è—Ç—å'), 'invitation_agree', selected.on_invitation_agree),
        Button(Const('‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å'), 'invitation_reject', selected.on_invitation_reject),
        Back(Const('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')),
        state=states.InvitationMenu.select_action,
        getter=getters.get_invitation
    )


async def on_process_result(data: Data, result: Dict, manager: DialogManager):
    if result:
        switch_to_window = result.get('switch_to_window')
        if switch_to_window == SwitchToWindow.SelectInvitation:
            await manager.switch_to(states.InvitationMenu.select_invitation)
